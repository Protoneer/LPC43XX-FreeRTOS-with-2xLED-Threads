#ifdef __USE_CMSIS
#include "LPC43xx.h"
#endif
#include "lpc43xx_gpio.h"
#include "lpc43xx_scu.h"
#include "lpc43xx_libcfg_default.h"
#include "lpc43xx_cgu.h"
#include "lpc43xx_utils.h"

#include <cr_section_macros.h>
#include <NXP/crp.h>

// BK
#include "FreeRTOS.h"
#include "task.h"
#include "timers.h"
#include "semphr.h"





__CRP const unsigned int CRP_WORD = CRP_NO_CRP ;



#define LED1_BIT			11 //LEDUSB
#define LED1_PORT			1
#define LED2_BIT			12 //LEDUSB
#define LED2_PORT			1


uint32_t msec;


uint32_t tempx, tempy;

int BK_TEST(void)
{
	// Needed
	SystemInit();
	CGU_Init();


	return 0;
}

int c_entry (void) {                       /* Main Program                       */
	SystemInit();
	CGU_Init();

	scu_pinmux(0x2 ,11 , MD_PUP, FUNC0); 	// P2.11 : GPIO1_11: Xplorer BOARD (LED D2)
	GPIO_SetDir(LED1_PORT,(1<<LED1_BIT), 1);
	GPIO_ClearValue(LED1_PORT,(1<<LED1_BIT));
	scu_pinmux(0x2 ,12 , MD_PUP, FUNC0); 	// P2.12 : GPIO1_12: Xplorer BOARD (LED D3)
	GPIO_SetDir(LED2_PORT,(1<<LED2_BIT), 1);
	GPIO_ClearValue(LED2_PORT,(1<<LED2_BIT));

	while (1)
	{                           					// Loop forever
		timer_delay_ms(50);
		GPIO_ClearValue(LED1_PORT,(1<<LED1_BIT));
		timer_delay_ms(50);
		GPIO_ClearValue(LED2_PORT,(1<<LED2_BIT));
		GPIO_SetValue(LED1_PORT,(1<<LED1_BIT));
		timer_delay_ms(50);
		GPIO_SetValue(LED2_PORT,(1<<LED2_BIT));

	}
}


int main(void)
{
	return BK_TEST();
    //return c_entry();
}

#ifdef  DEBUG
void check_failed(uint8_t *file, uint32_t line)
{
	while(1);
}
#endif


